user nginx;
worker_processes auto;
error_log /dev/stdout notice;
events {
  worker_connections 1024;
}

http {
  server_tokens off;
  sendfile on;
  log_format main '$remote_addr - [$msec] ($request_time) "$request" $status'
                  '$body_bytes_sent "$http_referer" "$http_user_agent"';
  access_log /dev/stdout main;
  proxy_cache_path /var/nginx/cache keys_zone=cache:10m;

  server {
    listen 443 ssl;
    listen 443 quic reuseport;
    listen 80;
    http2 on;

    ssl_certificate /etc/nginx/tex.pem;
    ssl_certificate_key /etc/nginx/tex-key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:ssl:10m;
    ssl_session_tickets off;
    ssl_dhparam /etc/nginx/dhparam;

    location /render/ {
      proxy_cache cache;
      proxy_cache_key $uri;
      proxy_cache_lock on;
      proxy_cache_valid 200 1h;
      proxy_pass http://web:3000/render/;

      add_header cache-control "public, max-age=3600";
      add_header x-cache $upstream_cache_status;
      include headers.conf;
    }
    location = /health {
      proxy_pass http://web:3000/health;
      include headers.conf;
    }
    location / {
      return 404;
      include headers.conf;
    }
  }
}
